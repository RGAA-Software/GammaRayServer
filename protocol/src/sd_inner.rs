// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SdInnerHello {
    #[prost(string, tag = "1")]
    pub server_name: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SdInnerHeartBeat {
    #[prost(string, tag = "1")]
    pub server_name: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub hb_index: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SdInnerMessage {
    #[prost(enumeration = "SdServerType", tag = "1")]
    pub server_type: i32,
    #[prost(enumeration = "SdInnerMessageType", tag = "2")]
    pub msg_type: i32,
    #[prost(string, tag = "3")]
    pub server_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "5")]
    pub hello: ::core::option::Option<SdInnerHello>,
    #[prost(message, optional, tag = "10")]
    pub heartbeat: ::core::option::Option<SdInnerHeartBeat>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum SdServerType {
    KSdSpvrServer = 0,
    KSdRelayServer = 1,
    KSdProfileServer = 2,
}
impl SdServerType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::KSdSpvrServer => "kSdSpvrServer",
            Self::KSdRelayServer => "kSdRelayServer",
            Self::KSdProfileServer => "kSdProfileServer",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "kSdSpvrServer" => Some(Self::KSdSpvrServer),
            "kSdRelayServer" => Some(Self::KSdRelayServer),
            "kSdProfileServer" => Some(Self::KSdProfileServer),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum SdInnerMessageType {
    KSdInnerHello = 0,
    KSdInnerHeartBeat = 1,
}
impl SdInnerMessageType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::KSdInnerHello => "kSdInnerHello",
            Self::KSdInnerHeartBeat => "kSdInnerHeartBeat",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "kSdInnerHello" => Some(Self::KSdInnerHello),
            "kSdInnerHeartBeat" => Some(Self::KSdInnerHeartBeat),
            _ => None,
        }
    }
}
